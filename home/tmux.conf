# vim:ft=tmux
# source-file "/usr/lib/python3.4/site-packages/powerline/bindings/tmux/powerline.conf"
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"
# add prefix pressing indicator
if-shell "test -f ~/.tmuxline_custom.conf" "source ~/.tmuxline_custom.conf"

# # --- colors (solarized dark)
# # default statusbar colors
# set -g status-style bg=black,fg=yellow,default
#
# # default window title colors
# setw -g window-status-style bg=default,fg=brightblue
#
# # active window title colors
# setw -g window-status-current-style bg=default,fg=yellow,dim
#
# # pane border
# set -g pane-border-style bg=default,fg=black,
# set -g pane-active-border-style fg=colour4
#
# # command line/message text
# set -g message-style bg=black,fg=yellow

# pane number display
set -g display-panes-time 500

# clock
setw -g clock-mode-colour yellow
set -g clock-mode-style 12
# --- end colors

# --- KEYBINDINGS
# Remap Prefix
set -g prefix M-,
set -g prefix2 M-r
unbind C-b
unbind C-v
unbind C-s
unbind C-j

# 0 is too far from ` ;)
set -g base-index 1
set -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename off
# set-window-option -g automatic-rename-format "#{b:pane_current_path}"

# Set aggressive resize window
set-window-option -g aggressive-resize on
set-option -g status on
set-option -g renumber-windows on
set-option -g status-interval 2
# set-option -g utf8 on
# set -g status-utf8 on
set -g set-titles on
set -g focus-events on

set -g default-terminal "xterm-256color"
set -g status-keys vi
set -g history-limit 50000
setw -g monitor-activity on

# This allows copy/paste in tmux
setw -g mode-keys vi
bind-key C-c copy-mode \; display-pane
bind p paste-buffer \; display-pane

# In copy mode
# `v` begins a selection. (movement keys to select the desired bits)
# bind -t vi-copy v begin-selection
bind -T copy-mode-vi v send-keys -X begin-selection \; display-pane
# `y` copies the current selection to one of tmux's "paste buffers"
# bind -t vi-copy y copy-selection
bind -T copy-mode-vi y send-keys -X copy-selection \; display-pane

# `V` changes between line- and columnwise selection
# bind -t vi-copy V rectangle-toggle
bind -T copy-mode-vi V send-keys -X rectangle-toggle \; display-pane

# bind -t vi-copy Y copy-end-of-line # ^1
bind -T copy-mode-vi Y send-keys -X copy-end-of-line \; display-pane

# bind -t vi-copy C-k halfpage-up
bind -T copy-mode-vi C-k send-keys -X halfpage-up \; display-pane
# bind -t vi-copy C-j halfpage-down
bind -T copy-mode-vi C-j send-keys -X halfpage-down \; display-pane

# bind-key -t vi-copy Up page-up
bind -T copy-mode-vi Up send-keys -X page-up \; display-pane
# bind-key -t vi-copy Down page-down
bind -T copy-mode-vi Down send-keys -X page-down \; display-pane

# bind -t vi-copy PageUp page-up
bind -T copy-mode-vi PageUp send-keys -X page-up \; display-pane
# bind -t vi-copy PageDown page-down
bind -T copy-mode-vi PageDown send-keys -X page-down \; display-pane

# bind -t vi-copy K scroll-up
bind -T copy-mode-vi K send-keys -X scroll-up \; display-pane
# bind -t vi-copy J scroll-down
bind -T copy-mode-vi J send-keys -X scroll-down \; display-pane

# bind -t vi-copy e end-of-line
bind -T copy-mode-vi e send-keys -X end-of-line \; display-pane
# bind -t vi-copy b start-of-line
bind -T copy-mode-vi b send-keys -X start-of-line \; display-pane

# bind -t vi-copy C-M-k top-line
bind -T copy-mode-vi C-M-k send-keys -X top-line \; display-pane
# bind -t vi-copy C-M-j bottom-line
bind -T copy-mode-vi C-M-j send-keys -X bottom-line \; display-pane
# bind -t vi-copy C-M-m middle-line
bind -T copy-mode-vi C-M-m send-keys -X middle-line \; display-pane

# List all keybindings in vi-copy mode
# bind-key B list-keys -t copy-mode-vi
bind M list-keys \; display-pane

# #: List all paste buffers.
# -: Delete the most recently copied buffer of text.
# =: Choose which buffer to paste interactively from a list.
# [: Enter copy mode to copy text or view the history.
# ]: Paste the most recently copied buffer of text.

# Scrolling: Enter vi-copy mode using M-,-, then scroll up and down the buffer

# This allows for right-click pop-up menu of gnome-terminal
#
# tmux 2.1+
# set -g mouse-utf8 on
# set -g mouse on
#
# tmux 2.0-
# setw -g mode-mouse off
# set -g mouse-resize-pane off
# set -g mouse-select-pane off
# set -g mouse-select-window off

# Display all panes & let user selects
# bind -n M-w display-panes -d 10000 
bind -n M-\; set -g display-panes-colour colour4 \; set -g pane-border-style "fg=colour4" \; display-panes -d 10000 \; set -g display-panes-colour colour0 \; set -g pane-border-style "fg=colour0"
bind -n M-n select-pane -t +1 \; display-pane
bind -n M-p select-pane -t -1 \; display-pane

# bind-key H split-window -h -c "#{pane_current_path}"
bind-key h split-window -h -c "#{pane_current_path}" \; display-pane
bind-key v split-window -v -c "#{pane_current_path}" \; display-pane

bind-key M-j resize-pane -D 5 \; display-pane
bind-key M-k resize-pane -U 5 \; display-pane
bind-key M-h resize-pane -L 5 \; display-pane
bind-key M-l resize-pane -R 5 \; display-pane

# Toggle full-screen of pane
bind -n M-f resize-pane -Z \; display-pane

# Shift arrow to switch windows
bind -n M-t next-window \; display-pane
bind -n M-T previous-window \; display-pane

# Swap windows
bind -n M-< swap-window -t -1 \; previous-window \; display-pane
bind -n M-> swap-window -t +1 \; next-window \; display-pane

# Join windows
bind -n M-J command-prompt -p "Join pane from window:" "join-pane -s '%%'" \; display-pane
bind-key M-m command-prompt -p "Move pane to window:" "join-pane -t '%%'" \; display-pane
bind -n M-M command-prompt -p "Move window to session:" "move-window -t '%%':" \; display-pane
bind -n M-m command-prompt -p "Move/Re-number window to position/number:" "move-window -t '%%'" \; display-pane
bind-key A command-prompt -p "Attach pane to session:" "join-pane -t '%%':" \; display-pane
bind-key M-a command-prompt -p "Break pane to:" "break-pane -t '%%':" \; display-pane

# Attach/Detach Sessions
# Re-attach a detached session
bind -n M-a command-prompt -p "Attach to session:" "attach-session -d -t '%%'" \; display-pane
bind -n M-A command-prompt -p "Steal & Attach to session:" "attach-session -t '%%'" \; display-pane
bind-key Enter command-prompt -p "New session:" "new -s '%%'" \; display-pane
bind-key M-Enter new-session \; display-pane
bind-key q confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'" \; display-pane
bind-key k choose-session \; command-prompt -p "Kill session number:" "kill-session -t '%%'" \; display-pane
bind-key g command-prompt -p "Go to session number:" "switch-client -t '%%'" \; display-pane
bind-key n switch-client -n \; display-pane
bind-key p switch-client -p \; display-pane
bind-key Tab switch-client -l \; display-pane
bind-key m command-prompt -p "Re-number session to:" "rename-session '%%'" \; display-pane
bind-key D detach \; display-pane
bind-key W choose-session \; display-pane

# Swap pane
bind -n M-w swap-pane -D \; display-pane 
bind -n M-W swap-pane -U \; display-pane 

# # Synchronize pane
# bind -n M-s set-window-option synchronize-panes \; display-pane

# bind -n M-V select-layout even-vertical
# bind -n M-H select-layout even-horizontal
bind-key V select-layout even-vertical \; display-pane
bind-key H select-layout even-horizontal \; display-pane
bind-key = select-layout tiled \; display-pane
bind-key C-v select-layout main-vertical \; display-pane
bind-key C-h select-layout main-horizontal \; display-pane

# Tmux new-window
bind-key t new-window -a -c "#{pane_current_path}" \; display-pane
bind-key M-t break-pane -d \; display-pane
bind-key C-t break-pane \; display-pane

# Tmux select-window
bind -n M-0 select-window -t 0 \; display-pane
bind -n M-1 select-window -t 1 \; display-pane
bind -n M-2 select-window -t 2 \; display-pane
bind -n M-3 select-window -t 3 \; display-pane
bind -n M-4 select-window -t 4 \; display-pane
bind -n M-5 select-window -t 5 \; display-pane
bind -n M-6 select-window -t 6 \; display-pane
bind -n M-7 select-window -t 7 \; display-pane
bind -n M-8 select-window -t 8 \; display-pane
bind -n M-9 select-window -t 9 \; display-pane

bind -n M-g command-prompt -p "Go to window:" "select-window -t '%%'" \; display-pane

# Tmux attach-session (and also detach old session window)
bind-key 0 switch-client -t 0 \; display-pane
bind-key 1 switch-client -t 1 \; display-pane
bind-key 2 switch-client -t 2 \; display-pane
bind-key 3 switch-client -t 3 \; display-pane
bind-key 4 switch-client -t 4 \; display-pane
bind-key 5 switch-client -t 5 \; display-pane
bind-key 6 switch-client -t 6 \; display-pane
bind-key 7 switch-client -t 7 \; display-pane
bind-key 8 switch-client -t 8 \; display-pane
bind-key 9 switch-client -t 9 \; display-pane
# bind-key 0 attach-session -d -t 0
# bind-key 1 attach-session -d -t 1
# bind-key 2 attach-session -d -t 2
# bind-key 3 attach-session -d -t 3
# bind-key 4 attach-session -d -t 4
# bind-key 5 attach-session -d -t 5
# bind-key 6 attach-session -d -t 6
# bind-key 7 attach-session -d -t 7
# bind-key 8 attach-session -d -t 8
# bind-key 9 attach-session -d -t 9

# Tmux attach-session (and keep old session window)
bind-key M-0 attach-session -t 0 \; display-pane
bind-key M-1 attach-session -t 1 \; display-pane
bind-key M-2 attach-session -t 2 \; display-pane
bind-key M-3 attach-session -t 3 \; display-pane
bind-key M-4 attach-session -t 4 \; display-pane
bind-key M-5 attach-session -t 5 \; display-pane
bind-key M-6 attach-session -t 6 \; display-pane
bind-key M-7 attach-session -t 7 \; display-pane
bind-key M-8 attach-session -t 8 \; display-pane
bind-key M-9 attach-session -t 9 \; display-pane

# Tmux rename-window
bind-key C confirm kill-window
# bind -n M-e rename-window ${USER} \; setw automatic-rename \; display-pane
bind-key e command-prompt -p "New window name:" "rename-window '%%'" \; display-pane 
bind -n M-C confirm-before -p "Kill current window (y/n)?" "run-shell 'tmux kill-window'" \; display-pane
# bind-key c kill-window
# bind-key w choose-tree \; display-pane
bind-key w choose-window \; display-pane
bind-key b choose-window \; display-pane
bind -n M-_ kill-pane \; display-pane
bind -n M-Tab last-window \; display-pane
bind -n M-Q confirm-before -p "Kill tmux (y/n)?" "run-shell 'killall tmux'" \; display-pane

# No delay for escape key press
set -sg escape-time 0

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
# Conflicting keybindings:
# bind-key t
# set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'dominikduda/tmux_mode_indicator'

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L' \; 'display-pane'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D' \; 'display-pane'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U' \; 'display-pane'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R' \; 'display-pane'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L \; display-pane
# bind-key -T copy-mode-vi 'C-j' select-pane -D \; display-pane
# bind-key -T copy-mode-vi 'C-k' select-pane -U \; display-pane
# bind-key -T copy-mode-vi 'C-l' select-pane -R \; display-pane
# bind-key -T copy-mode-vi 'C-\' select-pane -l \; display-pane

# unbind -n 'C-h'
# unbind -n 'C-j'
# unbind -n 'C-k'
# unbind -n 'C-l'
# unbind -n 'C-\'
#
# unbind -T 'C-h'
# unbind -T 'C-j'
# unbind -T 'C-k'
# unbind -T 'C-l'
# unbind -T 'C-\'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L' \; 'display-pane'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D' \; 'display-pane'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U' \; 'display-pane'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R' \; 'display-pane'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L \; display-pane
bind-key -T copy-mode-vi 'M-j' select-pane -D \; display-pane
bind-key -T copy-mode-vi 'M-k' select-pane -U \; display-pane
bind-key -T copy-mode-vi 'M-l' select-pane -R \; display-pane
bind-key -T copy-mode-vi 'M-\' select-pane -l \; display-pane

# # Use Alt-vim keys without prefix key to switch panes
# bind -n M-h select-pane -L \; display-pane
# bind -n M-j select-pane -D \; display-pane
# bind -n M-k select-pane -U \; display-pane
# bind -n M-l select-pane -R \; display-pane
# # Switch panes using Ctrl keys
# set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @resurrect-processes 'vi vim nvim emacs man less more tail top htop irssi ssh psql mysql sqlite3'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-save-bash-history 'on'
set -g @copycat_next 'N'
set -g @copycat_prev 'n'
set -g @sidebar-tree-pager 'vim -c "set filetype=tree readonly buftype=nofile bufhidden=hide noswapfile nonumber norelativenumber" -'
set -g @sidebar-tree-focus 'f'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf
if "test ! -d ~/.tmux/plugins/tpm" "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run-shell '~/.tmux/plugins/tpm/tpm'

# If run as "tmux attach", create a session if one does not already exist
# new-session -n ${HOST}

# Reload tmux config
bind-key s source-file ~/.tmux.conf
